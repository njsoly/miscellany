<?xml version="1.0" encoding="UTF-8"?>
<project name="module_kotlinmaven" default="compile.module.kotlinmaven">
  <dirname property="module.kotlinmaven.basedir" file="${ant.file.module_kotlinmaven}"/>
  
  <property name="module.jdk.home.kotlinmaven" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.kotlinmaven" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.kotlinmaven" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.kotlinmaven" value="-encoding UTF-8 -source 5 -target 10 ${compiler.args}"/>
  
  <property name="kotlinmaven.output.dir" value="${module.kotlinmaven.basedir}/target/classes"/>
  <property name="kotlinmaven.testoutput.dir" value="${module.kotlinmaven.basedir}/target/test-classes"/>
  
  <path id="kotlinmaven.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="kotlinmaven.module.production.classpath">
    <path refid="${module.jdk.classpath.kotlinmaven}"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-common:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains:annotations:13.0.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.40.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-log4j12:1.7.28.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.28.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
  </path>
  
  <path id="kotlinmaven.runtime.production.module.classpath">
    <pathelement location="${kotlinmaven.output.dir}"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-common:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains:annotations:13.0.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.40.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-log4j12:1.7.28.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.28.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
  </path>
  
  <path id="kotlinmaven.module.classpath">
    <path refid="${module.jdk.classpath.kotlinmaven}"/>
    <pathelement location="${kotlinmaven.output.dir}"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-common:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains:annotations:13.0.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-test-junit:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-test-annotations-common:1.3.40.classpath"/>
    <path refid="library.maven:_org.mockito:mockito-all:2.0.2-beta.classpath"/>
    <path refid="library.maven:_junit:junit:4.12.classpath"/>
    <path refid="library.maven:_org.hamcrest:hamcrest-core:1.3.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-test:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-test-common:1.3.40.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-log4j12:1.7.28.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.28.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
  </path>
  
  <path id="kotlinmaven.runtime.module.classpath">
    <pathelement location="${kotlinmaven.testoutput.dir}"/>
    <pathelement location="${kotlinmaven.output.dir}"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-common:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains:annotations:13.0.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-test-junit:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-test-annotations-common:1.3.40.classpath"/>
    <path refid="library.maven:_org.mockito:mockito-all:2.0.2-beta.classpath"/>
    <path refid="library.maven:_junit:junit:4.12.classpath"/>
    <path refid="library.maven:_org.hamcrest:hamcrest-core:1.3.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-test:1.3.40.classpath"/>
    <path refid="library.maven:_org.jetbrains.kotlin:kotlin-test-common:1.3.40.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-log4j12:1.7.28.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.7.28.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.17.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.kotlinmaven">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.kotlinmaven">
    <patternset refid="excluded.from.module.kotlinmaven"/>
  </patternset>
  
  <path id="kotlinmaven.module.sourcepath">
    <dirset dir="${module.kotlinmaven.basedir}">
      <include name="src/main.kotlin.main/kotlin"/>
    </dirset>
  </path>
  
  <path id="kotlinmaven.module.test.sourcepath">
    <dirset dir="${module.kotlinmaven.basedir}">
      <include name="src/test/kotlin"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.kotlinmaven" depends="compile.module.kotlinmaven.production,compile.module.kotlinmaven.tests" description="Compile module KotlinMaven"/>
  
  <target name="compile.module.kotlinmaven.production" depends="register.custom.compilers" description="Compile module KotlinMaven; production classes">
    <mkdir dir="${kotlinmaven.output.dir}"/>
    <javac2 destdir="${kotlinmaven.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.kotlinmaven}/javac">
      <compilerarg line="${compiler.args.kotlinmaven}"/>
      <bootclasspath refid="kotlinmaven.module.bootclasspath"/>
      <classpath refid="kotlinmaven.module.production.classpath"/>
      <src refid="kotlinmaven.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.kotlinmaven"/>
    </javac2>
    
    <copy todir="${kotlinmaven.output.dir}">
      <fileset dir="${module.kotlinmaven.basedir}/src/main.kotlin.main/kotlin">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.kotlinmaven.tests" depends="register.custom.compilers,compile.module.kotlinmaven.production" description="compile module KotlinMaven; test classes" unless="skip.tests">
    <mkdir dir="${kotlinmaven.testoutput.dir}"/>
    <javac2 destdir="${kotlinmaven.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.kotlinmaven}/javac">
      <compilerarg line="${compiler.args.kotlinmaven}"/>
      <bootclasspath refid="kotlinmaven.module.bootclasspath"/>
      <classpath refid="kotlinmaven.module.classpath"/>
      <src refid="kotlinmaven.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.kotlinmaven"/>
    </javac2>
    
    <copy todir="${kotlinmaven.testoutput.dir}">
      <fileset dir="${module.kotlinmaven.basedir}/src/test/kotlin">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.kotlinmaven" description="cleanup module">
    <delete dir="${kotlinmaven.output.dir}"/>
    <delete dir="${kotlinmaven.testoutput.dir}"/>
  </target>
</project>
